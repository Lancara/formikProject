{"ast":null,"code":"import { __rest, __assign } from './_virtual/_tslib.js';\nimport MuiMobileTimePicker from '@mui/lab/MobileTimePicker';\nimport TextField from '@mui/material/TextField';\nimport { getIn } from 'formik';\nimport * as React from 'react';\nimport { createErrorHandler } from './errorHandler.js';\n\nfunction fieldToMobileTimePicker(_a) {\n  var _b = _a.field;\n  _b.onChange;\n\n  var field = __rest(_b, [\"onChange\"]),\n      _c = _a.form,\n      isSubmitting = _c.isSubmitting,\n      touched = _c.touched,\n      errors = _c.errors,\n      setFieldValue = _c.setFieldValue,\n      setFieldError = _c.setFieldError,\n      setFieldTouched = _c.setFieldTouched,\n      _d = _a.textField,\n      _e = _d === void 0 ? {} : _d,\n      helperText = _e.helperText,\n      onBlur = _e.onBlur,\n      textField = __rest(_e, [\"helperText\", \"onBlur\"]),\n      disabled = _a.disabled,\n      label = _a.label,\n      onChange = _a.onChange,\n      onError = _a.onError,\n      renderInput = _a.renderInput,\n      props = __rest(_a, [\"field\", \"form\", \"textField\", \"disabled\", \"label\", \"onChange\", \"onError\", \"renderInput\"]);\n\n  var fieldError = getIn(errors, field.name);\n  var showError = getIn(touched, field.name) && !!fieldError;\n  return __assign(__assign({\n    renderInput: renderInput !== null && renderInput !== void 0 ? renderInput : function (params) {\n      return React.createElement(TextField, __assign({}, params, {\n        error: showError,\n        helperText: showError ? fieldError : helperText,\n        label: label,\n        onBlur: onBlur !== null && onBlur !== void 0 ? onBlur : function () {\n          setFieldTouched(field.name, true, true);\n        }\n      }, textField));\n    },\n    disabled: disabled !== null && disabled !== void 0 ? disabled : isSubmitting,\n    onChange: onChange !== null && onChange !== void 0 ? onChange : function (date) {\n      setFieldTouched(field.name, true, false);\n      setFieldValue(field.name, date, true);\n    },\n    onError: onError !== null && onError !== void 0 ? onError : createErrorHandler(fieldError, field.name, setFieldError)\n  }, field), props);\n}\n\nfunction MobileTimePicker(_a) {\n  var children = _a.children,\n      props = __rest(_a, [\"children\"]);\n\n  return React.createElement(MuiMobileTimePicker, __assign({}, fieldToMobileTimePicker(props)), children);\n}\n\nMobileTimePicker.displayName = 'FormikMUIMobileTimePicker';\nexport { MobileTimePicker, fieldToMobileTimePicker };","map":null,"metadata":{},"sourceType":"module"}